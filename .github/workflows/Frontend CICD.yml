name: Frontend CICD

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.20.2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
    
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
    
      - name: Install Node.js dependencies
        run: npm install --force
    
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} &&
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} &&
          aws configure set region ${{ secrets.AWS_REGION }}
    
      - name: Add execute permission to the script
        run: chmod +x uploadDataToDynamoDB.sh
    
      - name: Run custom script
        run: sh uploadDataToDynamoDB.sh
    
      - name: Get API Gateway endpoint
        run: |
          API_ID=$(aws cloudformation describe-stacks --stack-name beatoncloud --query "Stacks[0].Outputs[?OutputKey=='APIEndpoint'].OutputValue" --output text)
          echo "{\"ApiUrl\": \"$API_ID\"}" > src/config.json
    
      - name: Build project
        run: npm run build
        env: 
          CI: ""

      - name: Frontend Deploy to S3
        run: |
          account_id=$(aws sts get-caller-identity --output text --query 'Account')
          S3_NAME=$(aws s3api list-buckets --query "Buckets[?contains(Name, 'beatoncloud-$account_id')].Name" --output text)
          aws s3 sync $GITHUB_WORKSPACE/build s3://$S3_NAME
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Upload data to S3
        run: |
          account_id=$(aws sts get-caller-identity --output text --query 'Account')
          S3_DATA=$(aws s3api list-buckets --query "Buckets[?contains(Name, 'beatoncloud-bucket-$account_id')].Name" --output text)
          aws s3 cp $GITHUB_WORKSPACE/beatoncloud-click-source-data.parquet s3://$S3_DATA/beatoncloud-click-source-data.parquet
          aws s3 cp $GITHUB_WORKSPACE/beatoncloud-click-stream-data.parquet s3://$S3_DATA/beatoncloud-click-stream-data.parquet
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}