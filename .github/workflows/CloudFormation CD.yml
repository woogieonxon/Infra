name: CloudFormation CD

on:
  pull_request:
    branches:
      - main
    paths:
      - 'CloudFormation.yaml'
      - '.github/workflows/CloudFormation CD.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Upgrade AWS CLI
      run: |
        pip install --upgrade awscli

    - name: Configure AWS credentials
      run: |
        aws configure set AWS_ACCESS_KEY_ID ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set AWS_SECRET_ACCESS_KEY ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Configure AWS region
      run: aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Check if S3 bucket exists
      id: check_bucket
      run: |
        account_id=$(aws sts get-caller-identity --output text --query 'Account')
        bucket_name="infra-${account_id}"
        if ! aws s3api head-bucket --bucket $bucket_name 2>/dev/null; then
          echo "Bucket does not exist, creating bucket"
          aws s3api create-bucket --bucket ${bucket_name} --region ${{ secrets.AWS_REGION }}
        else
          echo "Bucket exists, no further action needed"
        fi
    
    - name: Deploy CloudFormation stack
      run: |
        account_id=$(aws sts get-caller-identity --output text --query 'Account')
        bucket_name="infra-${account_id}"
        echo "AWS_REGION environment variable: $AWS_REGION"
        aws cloudformation deploy --template-file CloudFormation.yaml --stack-name beatoncloud --s3-bucket $bucket_name --capabilities CAPABILITY_IAM

    - name: Check if CloudFormation deployment failed
      id: check_deployment
      run: |
        stack_status=$(aws cloudformation describe-stacks --stack-name beatoncloud --query 'Stacks[0].StackStatus' --output text)
        if [ "$stack_status" == "ROLLBACK_COMPLETE" ] || [ "$stack_status" == "CREATE_FAILED" ]; then
          echo "CloudFormation deployment failed. Deleting the stack..."
          aws cloudformation delete-stack --stack-name beatoncloud
          exit 1  # Mark the job as failed
        else
          echo "CloudFormation deployment successful."
        fi
